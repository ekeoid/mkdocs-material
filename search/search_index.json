{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"page2/","title":"Page 2","text":""},{"location":"page2/#another-page","title":"Another Page","text":"<p>Example text</p>"},{"location":"page2/#code-annotiation-examples","title":"Code Annotiation Examples","text":""},{"location":"page2/#codeblocks","title":"Codeblocks","text":"<p>Some <code>code</code> goes here.</p>"},{"location":"page2/#plain-codeblock","title":"Plain codeblock","text":"<p>A plain codeblock:</p> bubble_sort.py<pre><code># Python program for implementation of Bubble Sort\ndef bubbleSort(arr):\nn = len(arr)\n# optimize code, so if the array is already sorted, it doesn't need\n# to go through the entire process\nswapped = False\n# Traverse through all array elements\nfor i in range(n-1):\n# range(n) also work but outer loop will\n# repeat one time more than needed.\n# Last i elements are already in place\nfor j in range(0, n-i-1):\n# traverse the array from 0 to n-i-1\n# Swap if the element found is greater\n# than the next element\nif arr[j] &gt; arr[j + 1]:\nswapped = True\narr[j], arr[j + 1] = arr[j + 1], arr[j]\nif not swapped:\n# if we haven't needed to make a single swap, we\n# can just exit the main loop.\nreturn\n# Driver code to test above\narr = [64, 34, 25, 12, 22, 11, 90]\nbubbleSort(arr)\nprint(\"Sorted array is:\")\nfor i in range(len(arr)):\nprint(\"% d\" % arr[i], end=\" \")\n</code></pre>"}]}